public class Solution {
public List<List<Integer>> combinationSum3(int k, int n) {
    List<List<Integer>> res = new ArrayList<>();
    int[] arr = {1,2,3,4,5,6,7,8,9};
    helper(res, new ArrayList<>(), arr, k, n,0);
    return res;
    }

public void helper(List<List<Integer>> res, List<Integer> list,int[] arr,int k,int target,int ind){
    if (k == 0 && target == 0){
        res.add(new ArrayList<>(list));
        return;
    } 
    for (int i = ind; i < arr.length && target > 0 && k >0; i++){
        list.add(arr[i]);
        helper(res, list, arr, k-1,target-arr[i],i+1);
        list.remove(list.size()-1);
    }
    
}
}
